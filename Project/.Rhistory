library(MCMCpack)
source('~/GitHub/SDS383D-course-work/Project/functions.R')
source('~/GitHub/SDS383D-course-work/Project/functions.R')
source('~/GitHub/SDS383D-course-work/Project/functions.R')
y=1
sigma2=0.1
mu=1
h=seq(from=0.1,to=8,by=0.1)
s=(1-2*exp(sigma2))/(1-exp(sigma2))+0.5
r=(s-1)*exp(mu+sigma2/2)+y^2/2
qmode=r/(1+s)
c=1.1*p(y,qmode,sigma2,mu)/dinvgamma(qmode,scale=r,shape=s)
plot(p(y,h,sigma2,mu)~h,type='l',col="red")
lines(c*dinvgamma(h,shape=s,scale=r)~h,col="blue")
plot(p(y,h,sigma2,mu)~h,type='l',col="red",ylim=c(0,0.3))
lines(c*dinvgamma(h,shape=s,scale=r)~h,col="blue")
c=p(y,qmode,sigma2,mu)/dinvgamma(qmode,scale=r,shape=s)
plot(p(y,h,sigma2,mu)~h,type='l',col="red",ylim=c(0,0.3))
lines(c*dinvgamma(h,shape=s,scale=r)~h,col="blue")
plot(p(y,h,sigma2,mu)~h,type='l',col="black",ylim=c(0,0.3))
lines(c*dinvgamma(h,shape=s,scale=r)~h,col="blue")
lines(1.1*c*dinvgamma(h,shape=s,scale=r)~h,col="red")
lines(1.2*c*dinvgamma(h,shape=s,scale=r)~h,col="green")
plot(p(y,h,sigma2,mu)~h,type='l',col="black",ylim=c(0,0.25))
lines(c*dinvgamma(h,shape=s,scale=r)~h,col="blue")
lines(1.1*c*dinvgamma(h,shape=s,scale=r)~h,col="red")
lines(1.2*c*dinvgamma(h,shape=s,scale=r)~h,col="green")
plot(p(y,h,sigma2,mu)~h,type='l',col="black",ylim=c(0,0.25),ylab="")
lines(c*dinvgamma(h,shape=s,scale=r)~h,col="blue")
lines(1.1*c*dinvgamma(h,shape=s,scale=r)~h,col="red")
lines(1.2*c*dinvgamma(h,shape=s,scale=r)~h,col="green")
?legend()
legend(legend=c("p","c=1"),col=c("black","blue"))
legend(x=8,y=0.25,legend=c("p","c=1"),col=c("black","blue"))
legend(x=6,y=0.25,legend=c("p","c=1"),col=c("black","blue"))
legend(x=7,y=0.25,legend=c("p","c=1"),col=c("black","blue"))
legend(x=7,y=0.25,legend=c("p","c=1"),fill=c("black","blue"))
plot(p(y,h,sigma2,mu)~h,type='l',col="black",ylim=c(0,0.25),ylab="")
lines(c*dinvgamma(h,shape=s,scale=r)~h,col="blue")
lines(1.1*c*dinvgamma(h,shape=s,scale=r)~h,col="red")
lines(1.2*c*dinvgamma(h,shape=s,scale=r)~h,col="green")
legend(x=7,y=0.25,legend=c("p","c=1","c=1.1","c=1.2"),fill=c("black","blue","red","green"))
plot(p(y,h,sigma2,mu)~h,type='l',col="black",ylim=c(0,0.25),ylab="")
lines(c*dinvgamma(h,shape=s,scale=r)~h,col="blue")
lines(1.1*c*dinvgamma(h,shape=s,scale=r)~h,col="red")
lines(1.2*c*dinvgamma(h,shape=s,scale=r)~h,col="green")
legend(x=6.8,y=0.25,legend=c("p","c=1","c=1.1","c=1.2"),fill=c("black","blue","red","green"))
install.packages("fGarch")
PerformanceGraphExport <- read.csv("~/GitHub/SDS383D-course-work/Project/PerformanceGraphExport.csv")
View(PerformanceGraphExport)
sp <- read.csv("~/GitHub/SDS383D-course-work/Project/SP.csv")
View(sp)
sp=sp[c(Effective.date,S.P.500)]
sp=sp[c(1,2,3,4)]
plot(sp$S.P.500)
sp$S.P.500
View(sp)
View(sp)
sp=sp[seq(from=1,to=252)]
library(fGarch)
sp=sp[seq(from=1,to=252),]
plot(sp$S.P.500)
plot(sp$S.P.500,type="l")
?fGARCH
??fGARCH
garchFit[data=sp$S.P.500]
garchFit[data=sp]
garchFit(data=sp$S.P.500)
g11=garchFit(data=sp$S.P.500)
g11$coef
g11.coef
g11[coef]
g11@formula
g11@fitted
lines(g11@fitted,col="red")
lines(g11@fit,col="red")
g11@fit
g11@data
g11@coef
coef(g11)
fitted(g11)
?"fitted"
fitted(g11)
coef(g11)
alp=coef(g11)@alpha1
alp=coef(g11)[4]
alp=coef(g11)[,4]
alp=coef(g11)[3]
alp
alp=coef(g11)[2,3]
alp=coef(g11)[1,3]
lines(sp$S.P.500*0.7959+2168.718)
plot(sp$S.P.500,type="l")
lines(sp$S.P.500*0.7959+2168.718)
lines(sp$S.P.500*0.7959+2168.718,col="red")
sp$S.P.500*0.7959+2168.718
plot(sp$S.P.500*0.7959+2168.718,col="red")
plot(sp$S.P.500,type="l")
lines(sp$S.P.500*0.7959+2168.718,col="red")
plot(sp$S.P.500,type="l")
points(sp$S.P.500*0.7959+2168.718,col="red")
plot(sp$S.P.500*0.7959+2168.718,col="red")
coef(g11)
plot(sp$S.P.500*0.2237+2168.718,col="red")
g11=garchFit(data=sp$S.P.500)
library(stats)
?ar
ar1=ar(data=sp$S.P.500)
ar1=ar(x=sp$S.P.500)
coef(ar1)
ar1@order
ar1$order
ar1$resid
ar1$pred
ar1$ar
plot(ar1$resid,col="red")
plot(ar1$resid,type='l')
y=ar1$resid
plot(sp$S.P.500,type="l")
ar1$x.intercept
ar1=ar.ols(x=sp$S.P.500)
lines(ar1$ar*sp$S.P.500+ar1$x.intercept,col="red")
ar1$x.intercept
ar1$ar
ar1=ar.ols(x=sp$S.P.500,order.max=1)
lines(ar1$ar*sp$S.P.500+ar1$x.intercept,col="red")
y=ar1$resid
plot(ar1$resid,type='l')
plot(y,type='l')
y=ar1$resid
plot(y,type='l')
plot(y,type='l')
?rnorm
plot(sp$S.P.500,type="l")
ar1=ar.ols(x=sp$S.P.500,order.max=1)
lines(ar1$ar*sp$S.P.500+ar1$x.intercept,col="red")
y=ar1$resid
plot(y,type='l')
plot(log(abs(y)),type='l')
mean(log(abs(y)))
Mean(log(abs(y)))
?"mean"
log(abs(y))
mean(log(abs(y)))
rowMeans(log(abs(y)))
colMeans(log(abs(y)))
mean(log(abs(y)))
sum(log(abs(y)))
lny=log(abs(y))
y=na.omit(y)
plot(y,type='l')
mean(log(abs(y)))
plot(sp$S.P.500,type="l")
lines(ar1$ar*sp$S.P.500+ar1$x.intercept,col="red")
plot(sp$S.P.500,type="l")
lines(ar1$ar*sp$S.P.500+ar1$x.intercept~seq(from=2,to=253),col="red")
?sd
sd(y)
log(sd(y))
source('~/GitHub/SDS383D-course-work/Project/functions.R')
source('~/GitHub/SDS383D-course-work/Project/functions.R')
source('~/GitHub/SDS383D-course-work/Project/functions.R')
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
source('~/GitHub/SDS383D-course-work/Project/functions.R')
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
debugSource('~/GitHub/SDS383D-course-work/Project/functions.R')
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
source('~/GitHub/SDS383D-course-work/Project/functions.R')
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
warnings()
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
source('~/GitHub/SDS383D-course-work/Project/functions.R')
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
newh[i]=nexth(y[i],h[i],sigma2,mu[i])
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
dinvgamma(qmode,scale=r,shape=s)
p(y,qmode,sigma2,mu)
p(y,qmode,sigma2,mu)
y=20
sigma2=0.2
mu=7
h=seq(from=0.1,to=8,by=0.1)
s=(1-2*exp(sigma2))/(1-exp(sigma2))+0.5
r=(s-1)*exp(mu+sigma2/2)+y^2/2
qmode=r/(1+s)
c=p(y,qmode,sigma2,mu)/dinvgamma(qmode,scale=r,shape=s)
plot(p(y,h,sigma2,mu)~h,type='l',col="black",ylim=c(0,0.25),ylab="")
h=seq(from=0.1,to=100,by=0.1)
plot(p(y,h,sigma2,mu)~h,type='l',col="black",ylim=c(0,0.25),ylab="")
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
debugSource('~/GitHub/SDS383D-course-work/Project/functions.R')
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
y=ar1$resid
y=na.omit(y)
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
debugSource('~/GitHub/SDS383D-course-work/Project/functions.R')
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
source('~/GitHub/SDS383D-course-work/Project/functions.R')
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
source('~/GitHub/SDS383D-course-work/Project/functions.R')
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
mu
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
debugSource('~/GitHub/SDS383D-course-work/Project/functions.R')
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
mu
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
debugSource('~/GitHub/SDS383D-course-work/Project/functions.R')
sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
debugSource('~/GitHub/SDS383D-course-work/Project/functions.R')
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
source('~/GitHub/SDS383D-course-work/Project/functions.R')
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
mu
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
debugSource('~/GitHub/SDS383D-course-work/Project/functions.R')
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
debugSource('~/GitHub/SDS383D-course-work/Project/functions.R')
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
ln_h
h
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
mu
source('~/GitHub/SDS383D-course-work/Project/functions.R')
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
h
ln_h
mu
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
?%
?\
?/
1\100
1%100
source('~/GitHub/SDS383D-course-work/Project/functions.R')
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
debugSource('~/GitHub/SDS383D-course-work/Project/functions.R')
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
debugSource('~/GitHub/SDS383D-course-work/Project/functions.R')
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
h
debugSource('~/GitHub/SDS383D-course-work/Project/functions.R')
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
?NaN
debugSource('~/GitHub/SDS383D-course-work/Project/functions.R')
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
source('~/GitHub/SDS383D-course-work/Project/functions.R')
warnings()
source('~/GitHub/SDS383D-course-work/Project/functions.R')
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
source('~/GitHub/SDS383D-course-work/Project/functions.R')
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
source('~/GitHub/SDS383D-course-work/Project/functions.R')
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
source('~/GitHub/SDS383D-course-work/Project/functions.R')
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
source('~/GitHub/SDS383D-course-work/Project/functions.R')
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
source('~/GitHub/SDS383D-course-work/Project/functions.R')
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
source('~/GitHub/SDS383D-course-work/Project/functions.R')
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
source('~/GitHub/SDS383D-course-work/Project/functions.R')
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
source('~/GitHub/SDS383D-course-work/Project/functions.R')
source('~/GitHub/SDS383D-course-work/Project/functions.R')
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
sample=sampler(y,1,1,0.5,0.1,1.2,0.1,1000)
